<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="holiday.manager.dataaccess.group.GroupMapper">

    <resultMap id="groupMap" type="holiday.manager.domain.group.Group">
        <id     property="groupId.value" column="group_id" />
        <result property="groupName.value" column="group_name"/>
        <collection property="managerList.userList" ofType="holiday.manager.domain.user.User">
            <id     property="userId.value" column="manager_user_id" />
            <result property="userName.value" column="manager_user_name"/>
        </collection>
        <collection property="memberList.userList" ofType="holiday.manager.domain.user.User">
            <id     property="userId.value" column="member_user_id" />
            <result property="userName.value" column="member_user_name"/>
        </collection>
    </resultMap>

    <resultMap id="groupExcludeUserMap" type="holiday.manager.domain.group.Group">
        <id     property="groupId.value" column="group_id" />
        <result property="groupName.value" column="group_name"/>
    </resultMap>

    <resultMap id="groupNameMap" type="holiday.manager.domain.group.GroupName">
        <id     property="value" column="name" />
    </resultMap>

    <resultMap id="gropuIdMap" type="holiday.manager.domain.group.GroupId">
        <id     property="value" column="group_id" />
    </resultMap>

    <select id="nextGroupId" resultMap="gropuIdMap">
        SELECT
            nextval('user.group_id_seq') AS group_id
    </select>

    <select id="findGroupName" resultMap="groupNameMap">
        SELECT
            name
        FROM
            "user".group
        WHERE
            "group".id = #{groupId.value}
    </select>

    <insert id="insertGroup">
        INSERT INTO
            "user".group (
                id,
                name,
                register_datetime,
                update_datetime
            )
            VALUES (
                #{groupId.value},
                #{groupName.value},
                now(),
                now()
            )
    </insert>

    <update id="updateGroup">
        UPDATE
            "user".group
        SET
            "name" = #{groupName.value},
            update_datetime = now()
        WHERE
            "id" = #{groupId.value}
    </update>

    <insert id="insertManager">
        INSERT INTO
            "user".manager (
                group_id,
                user_id,
                update_datetime
            )
            VALUES (
                #{groupId.value},
                #{userId.value},
                now()
            )
    </insert>

    <insert id="insertMember">
        INSERT INTO
            "user".member (
                group_id,
                user_id,
                update_datetime
            )
            VALUES (
                #{groupId.value},
                #{userId.value},
                now()
            )
    </insert>

    <delete id="deleteManager">
        DELETE FROM
            "user".manager
        WHERE
            user_id = #{userId.value}
        AND
            group_id = #{groupId.value}
    </delete>

    <delete id="deleteMember">
        DELETE FROM
            "user".member
        WHERE
            user_id = #{userId.value}
        AND
            group_id = #{groupId.value}
    </delete>

    <update id="deleteGroup">
        UPDATE
            "user".group
        SET
            deleted = true
        WHERE
            id = #{groupId.value}
    </update>

    <select id="findGroupById" resultMap="groupMap">
        SELECT
            "group".id AS group_id
            ,"group".name AS group_name
            ,manager.user_id AS manager_user_id
            ,manager.user_name AS manager_user_name
            ,member.user_id AS member_user_id
            ,member.user_name AS member_user_name
        FROM
            "user".group
            LEFT OUTER JOIN
                (
                    SELECT
                        member.group_id AS group_id,
                        "user".id AS user_id,
                        "user".name AS user_name
                    FROM
                        "user".member
                        INNER JOIN
                            "user"."user"
                            ON "user".id = member.user_id
                    WHERE
                        "user".deleted = false
                ) AS member
                ON member.group_id = "group".id
            LEFT OUTER JOIN
                (
                    SELECT
                        manager.group_id AS group_id,
                        "user".id AS user_id,
                        "user".name AS user_name
                    FROM
                        "user".manager
                        INNER JOIN
                            "user"."user"
                            ON "user".id = manager.user_id
                    WHERE
                        "user".deleted = false
                ) AS manager
                ON manager.group_id = "group".id
        WHERE
            "group".id = #{groupId.value}
        AND
            "group".deleted = false
    </select>

    <select id="findGroups" resultMap="groupExcludeUserMap">
        SELECT
            "group".id AS group_id
            ,"group".name AS group_name
        FROM
            "user".group
        WHERE
            "group".deleted = false
    </select>

    <delete id="deleteManagers">
        DELETE FROM
            "user".manager
        WHERE
            group_id = #{groupId.value}
    </delete>

    <delete id="deleteMembers">
        DELETE FROM
            "user".member
        WHERE
            group_id = #{groupId.value}
    </delete>

</mapper>